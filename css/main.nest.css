/*
Adapted from the tooltip design at http://www.cssportal.com/css-tooltip-generator/
*/
/*
For the markers to be positioned, their parent element must also have a position. So
they are all inside divs with the class pix that has a relative position but isn't moved
out of its normal positioning.
 */
.pix {
  position: relative;
  top: 0;
  left: 0; }

/*
To give all the buttons (the markers) the absolute position they need, all buttons
within divs with class pix are given that.
*/
div.pix button {
  position: absolute; }

/*
The spans contain the text of the tooltips, they are hidden on page load with
visibility: hidden. Other properties that are the same for all of them are also
included here
*/
div.pix span {
  position: absolute;
  color: #FFFFFF;
  height: auto;
  line-height: 1.2em;
  text-align: left;
  visibility: hidden;
  border-radius: 6px; }

/*
And properties the same for all when they are displayed on hover are covered here.
Also it is necessary to list all of the different versions of the tooltips, as there is
no way to cover the general case of spans inside classes being hovered over, and then
specify that they are visible in that case. So, one by one.
*/
.tooltipT:hover span, .tooltipTML:hover span, .tooltipTL:hover span, .tooltipTMR:hover span,
.tooltipTR:hover span, .tooltipL:hover span, .tooltipML:hover span, .tooltipR:hover span,
.tooltipMR:hover span, .tooltipB:hover span, .tooltipBML:hover span, .tooltipBL:hover span,
.tooltipBBL:hover span, .tooltipBMR:hover span, .tooltipBR:hover span, .tooltipBBR:hover span {
  visibility: visible;
  background-color: #1e001e;
  padding: 8px;
  z-index: 10;
  width: 400px; }

/*
 All the rest is to create tooltips adapted to markers in different areas of their image and
 different spots on the page, to keep them from running off the screen or blocking things
 people will probably be looking at.
*/
.tooltipT:hover span {
  bottom: 16px;
  left: -200px; }

.tooltipTML:hover span {
  bottom: 16px;
  left: -300px; }

.tooltipTL:hover span {
  bottom: 16px;
  right: -50%; }

.tooltipTMR:hover span {
  bottom: 16px;
  left: -100px; }

.tooltipTR:hover span {
  bottom: 16px;
  left: -50%; }

.tooltipL:hover span {
  right: 100%;
  top: -180px; }

.tooltipML:hover span {
  right: 100%;
  top: -90px; }

.tooltipR:hover span {
  left: 100%;
  top: -180px; }

.tooltipMR:hover span {
  left: 100%;
  top: -90px; }

.tooltipB:hover span {
  top: 16px;
  left: -200px; }

.tooltipBML:hover span {
  top: 16px;
  left: -300px; }

.tooltipBL:hover span {
  right: 100%;
  top: -8px; }

.tooltipBBL:hover span {
  top: 16px;
  left: -350px; }

.tooltipBBR:hover span {
  top: 16px;
  left: -30px; }

.tooltipBMR:hover span {
  top: 16px;
  left: -100px; }

.tooltipBR:hover span {
  left: 100%;
  top: -8px; }

/*TODO: Put all layout elements in a _layout.scss partial -
that includes all the variables below, and mixins for the
main elements of our layout. The current _standard_mixins
partial will be converted to that.

Incorporate rem for sizing
and get rid of px.

Incorporate media queries as part of
elements that need to be responsive but should stack below
a certain viewer width - there can be as many as you want,
i was confused, they don't involve an http call. Sass allows
media queries to be added as properties of a selector.

Make mixins for all the webkit instances.

Make a really good page that people with incompatible
browsers are taken to, that sells the idea of upgrading,
and also explains why and has a link to a basic site
if they absolutely won't or can't.

Add variables and maybe mixins to the _tooltip partial.

Solve:
  Comment sections, in-house, fully-featured
  Twitter feed in sidebar that isn't obnoxious
  RSS feed generator
  Getting rid of Sketchfab - Three.js canvasses?
  YouTube channel - replace on the site with Vimeo?

Create reading list, codepens, and video that explains the
way the css and html works, so others can easily maintain
or add to it.

Check out Jade and see if the html should also be adapted.

Check out making Atom packages, hacking Atom, and Electron,
so we can essentially create a custom CMS for Moonwards.
*/
html {
  color: #fff;
  font: 1rem/1.5rem 'Titillium Web', sans-serif;
  background: #000 url(https://www.moonwards.com/img/tycho7left.png) no-repeat fixed right 33px;
  margin: 0;
  padding: 0;
  background-size: 1600px; }
  @media only screen and (min-width: 1350px) {
    html {
      background-size: 100% auto; } }

body, ul {
  margin: 0; }

nav {
  width: 100%;
  position: fixed;
  top: 0; }
  nav ul {
    list-style-type: none;
    padding: 0;
    margin: 0;
    background-color: #000; }
  nav a {
    text-decoration: none;
    font-weight: 300;
    color: #fac819; }
  nav a:hover {
    color: yellow; }

nav > ul {
  display: flex;
  display: -moz-flex;
  display: -webkit-flex;
  display: -ms-flex;
  width: 100%;
  height: 33px;
  justify-content: space-around;
  align-items: baseline; }

nav > ul li {
  font-size: 18px;
  font-weight: 300;
  padding: 5px; }

/* Make dropdown menus*/
nav li > ul {
  display: flex;
  display: -moz-flex;
  display: -webkit-flex;
  display: -ms-flex;
  flex-direction: column;
  display: none;
  border-radius: 15px;
  border: 1px solid #666;
  border-top: none;
  padding: 10px; }

nav li:hover > ul {
  display: flex; }

header {
  display: flex;
  display: -moz-flex;
  display: -webkit-flex;
  display: -ms-flex;
  flex-flow: row-reverse wrap;
  justify-content: space-around;
  height: 290px;
  padding: 20px 0; }

.sec1 {
  flex-grow: 4;
  min-width: 400px;
  padding-right: 60px;
  margin-top: 2vw; }
  @media only screen and (max-width: 1350px) {
    .sec1 {
      flex-grow: 6;
      margin-top: 6vw; } }

.sec2 {
  align-self: flex-end;
  flex-grow: 7;
  display: flex;
  display: -moz-flex;
  display: -webkit-flex;
  display: -ms-flex;
  flex-direction: row-reverse;
  justify-content: flex-start; }
  .sec2 p {
    width: 40%;
    text-align: right;
    margin-right: 30px;
    margin-bottom: 25px;
    align-items: flex-start; }

.accent {
  font-style: italic;
  font-weight: 300;
  font-size: 20px;
  color: #967832;
  line-height: 24px;
  background: rgba(0, 0, 0, 0.7);
  border-radius: 50px;
  border: 8px solid black;
  padding: 12px; }

.container {
  display: flex;
  display: -moz-flex;
  display: -webkit-flex;
  display: -ms-flex;
  flex-wrap: wrap;
  justify-content: flex-end;
  align-items: stretch; }
  .container a {
    color: yellow;
    text-decoration: none; }
    .container a:visited {
      color: #d2ee5e; }
    .container a:hover {
      background-color: #3c3c0a; }
    .container a:active {
      background-color: #3c3c0a; }

section {
  display: flex;
  display: -moz-flex;
  display: -webkit-flex;
  display: -ms-flex;
  margin: auto;
  padding: 15px;
  min-width: 350px;
  flex: 1; }

.outerDiv {
  background-color: rgba(50, 50, 0, 0.5);
  border-radius: 2rem;
  -moz-border-radius: 2rem;
  -webkit-border-radius: 2rem;
  -ms-border-radius: 2rem; }

.innerDiv {
  background-color: rgba(10, 10, 10, 0.7);
  border-radius: 1.5rem;
  -moz-border-radius: 1.5rem;
  -webkit-border-radius: 1.5rem;
  -ms-border-radius: 1.5rem;
  margin: 15px; }
  .innerDiv p {
    padding: 12px;
    margin: 12px; }

.intro {
  font-size: 1.1em;
  line-height: 1.8em; }

aside {
  min-width: 250px;
  flex: 0.5;
  margin-top: 60px;
  display: flex;
  display: -moz-flex;
  display: -webkit-flex;
  display: -ms-flex;
  flex-flow: column nowrap;
  justify-content: flex-start;
  align-items: stretch; }

.sideDiv {
  background-color: rgba(0, 0, 0, 0.7);
  border-radius: 1.5rem 0 0 1.5rem;
  padding: 15px; }

.framewrap {
  position: relative;
  height: 0;
  overflow: hidden; }
  .framewrap iframe {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%; }

.frame16x9 {
  padding-bottom: 56.25%; }

.frame4x3 {
  padding-bottom: 75%; }
